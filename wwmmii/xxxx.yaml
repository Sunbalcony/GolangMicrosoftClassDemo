#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: default
#  namespace: public
#---
#kind: ClusterRole
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  name: default-runner
#  namespace: public
#rules:
#  - apiGroups: [ "" ]
#    resources: [ "persistentvolumes" ]
#    verbs: [ "get", "list", "watch", "create", "delete" ]
#  - apiGroups: [ "" ]
#    resources: [ "persistentvolumeclaims" ]
#    verbs: [ "get", "list", "watch", "update" ]
#  - apiGroups: [ "storage.k8s.io" ]
#    resources: [ "storageclasses" ]
#    verbs: [ "get", "list", "watch" ]
#  - apiGroups: [ "" ]
#    resources: [ "events" ]
#    verbs: [ "watch", "create", "update", "patch" ]
#  - apiGroups: [ "" ]
#    resources: [ "services", "endpoints" ]
#    verbs: [ "get","create","list", "watch","update" ]
#  - apiGroups: [ "extensions" ]
#    resources: [ "podsecuritypolicies" ]
#    resourceNames: [ "nfs-provisioner" ]
#    verbs: [ "use" ]
#---
#kind: ClusterRoleBinding
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  name: run-default
#  namespace: public
#subjects:
#  - kind: ServiceAccount
#    name: default
#    namespace: public
#roleRef:
#  kind: ClusterRole
#  name: cluster-admin
#  apiGroup: rbac.authorization.k8s.io
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: 
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
  selector:
    matchLabels:
      app: nginx

  
